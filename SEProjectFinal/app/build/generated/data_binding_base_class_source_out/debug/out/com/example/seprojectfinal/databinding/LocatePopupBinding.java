// Generated by view binder compiler. Do not edit!
package com.example.seprojectfinal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.seprojectfinal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LocatePopupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnLocateLoc;

  @NonNull
  public final EditText editTextDestinationGlideLoc;

  @NonNull
  public final EditText editTextLocationGlideLoc;

  private LocatePopupBinding(@NonNull LinearLayout rootView, @NonNull Button btnLocateLoc,
      @NonNull EditText editTextDestinationGlideLoc, @NonNull EditText editTextLocationGlideLoc) {
    this.rootView = rootView;
    this.btnLocateLoc = btnLocateLoc;
    this.editTextDestinationGlideLoc = editTextDestinationGlideLoc;
    this.editTextLocationGlideLoc = editTextLocationGlideLoc;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LocatePopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LocatePopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.locate_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LocatePopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLocateLoc;
      Button btnLocateLoc = ViewBindings.findChildViewById(rootView, id);
      if (btnLocateLoc == null) {
        break missingId;
      }

      id = R.id.editTextDestinationGlideLoc;
      EditText editTextDestinationGlideLoc = ViewBindings.findChildViewById(rootView, id);
      if (editTextDestinationGlideLoc == null) {
        break missingId;
      }

      id = R.id.editTextLocationGlideLoc;
      EditText editTextLocationGlideLoc = ViewBindings.findChildViewById(rootView, id);
      if (editTextLocationGlideLoc == null) {
        break missingId;
      }

      return new LocatePopupBinding((LinearLayout) rootView, btnLocateLoc,
          editTextDestinationGlideLoc, editTextLocationGlideLoc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
