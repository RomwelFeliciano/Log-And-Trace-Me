// Generated by view binder compiler. Do not edit!
package com.example.seprojectfinal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.seprojectfinal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SingleRowDesignViewLogBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView textViewDateLog;

  @NonNull
  public final TextView textViewEmailLog;

  @NonNull
  public final TextView textViewStatusLog;

  @NonNull
  public final TextView textViewTimeLog;

  private SingleRowDesignViewLogBinding(@NonNull CardView rootView,
      @NonNull TextView textViewDateLog, @NonNull TextView textViewEmailLog,
      @NonNull TextView textViewStatusLog, @NonNull TextView textViewTimeLog) {
    this.rootView = rootView;
    this.textViewDateLog = textViewDateLog;
    this.textViewEmailLog = textViewEmailLog;
    this.textViewStatusLog = textViewStatusLog;
    this.textViewTimeLog = textViewTimeLog;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SingleRowDesignViewLogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SingleRowDesignViewLogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.single_row_design_view_log, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SingleRowDesignViewLogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textViewDateLog;
      TextView textViewDateLog = ViewBindings.findChildViewById(rootView, id);
      if (textViewDateLog == null) {
        break missingId;
      }

      id = R.id.textViewEmailLog;
      TextView textViewEmailLog = ViewBindings.findChildViewById(rootView, id);
      if (textViewEmailLog == null) {
        break missingId;
      }

      id = R.id.textViewStatusLog;
      TextView textViewStatusLog = ViewBindings.findChildViewById(rootView, id);
      if (textViewStatusLog == null) {
        break missingId;
      }

      id = R.id.textViewTimeLog;
      TextView textViewTimeLog = ViewBindings.findChildViewById(rootView, id);
      if (textViewTimeLog == null) {
        break missingId;
      }

      return new SingleRowDesignViewLogBinding((CardView) rootView, textViewDateLog,
          textViewEmailLog, textViewStatusLog, textViewTimeLog);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
