// Generated by view binder compiler. Do not edit!
package com.example.seprojectfinal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.seprojectfinal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonLogoutAdm;

  @NonNull
  public final Button buttonLogsAdm;

  @NonNull
  public final Button buttonModifyAdm;

  @NonNull
  public final Button buttonReportsAdm;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageViewLogs;

  @NonNull
  public final ImageView imageViewModify;

  @NonNull
  public final ImageView imageViewReports;

  @NonNull
  public final LinearLayout linearLayoutLogsAdm;

  @NonNull
  public final LinearLayout linearLayoutModifyAdm;

  @NonNull
  public final LinearLayout linearLayoutReportsAdm;

  private ActivityAdminProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonLogoutAdm, @NonNull Button buttonLogsAdm,
      @NonNull Button buttonModifyAdm, @NonNull Button buttonReportsAdm,
      @NonNull ImageView imageView3, @NonNull ImageView imageViewLogs,
      @NonNull ImageView imageViewModify, @NonNull ImageView imageViewReports,
      @NonNull LinearLayout linearLayoutLogsAdm, @NonNull LinearLayout linearLayoutModifyAdm,
      @NonNull LinearLayout linearLayoutReportsAdm) {
    this.rootView = rootView;
    this.buttonLogoutAdm = buttonLogoutAdm;
    this.buttonLogsAdm = buttonLogsAdm;
    this.buttonModifyAdm = buttonModifyAdm;
    this.buttonReportsAdm = buttonReportsAdm;
    this.imageView3 = imageView3;
    this.imageViewLogs = imageViewLogs;
    this.imageViewModify = imageViewModify;
    this.imageViewReports = imageViewReports;
    this.linearLayoutLogsAdm = linearLayoutLogsAdm;
    this.linearLayoutModifyAdm = linearLayoutModifyAdm;
    this.linearLayoutReportsAdm = linearLayoutReportsAdm;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLogoutAdm;
      Button buttonLogoutAdm = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogoutAdm == null) {
        break missingId;
      }

      id = R.id.buttonLogsAdm;
      Button buttonLogsAdm = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogsAdm == null) {
        break missingId;
      }

      id = R.id.buttonModifyAdm;
      Button buttonModifyAdm = ViewBindings.findChildViewById(rootView, id);
      if (buttonModifyAdm == null) {
        break missingId;
      }

      id = R.id.buttonReportsAdm;
      Button buttonReportsAdm = ViewBindings.findChildViewById(rootView, id);
      if (buttonReportsAdm == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageViewLogs;
      ImageView imageViewLogs = ViewBindings.findChildViewById(rootView, id);
      if (imageViewLogs == null) {
        break missingId;
      }

      id = R.id.imageViewModify;
      ImageView imageViewModify = ViewBindings.findChildViewById(rootView, id);
      if (imageViewModify == null) {
        break missingId;
      }

      id = R.id.imageViewReports;
      ImageView imageViewReports = ViewBindings.findChildViewById(rootView, id);
      if (imageViewReports == null) {
        break missingId;
      }

      id = R.id.linearLayoutLogsAdm;
      LinearLayout linearLayoutLogsAdm = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutLogsAdm == null) {
        break missingId;
      }

      id = R.id.linearLayoutModifyAdm;
      LinearLayout linearLayoutModifyAdm = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutModifyAdm == null) {
        break missingId;
      }

      id = R.id.linearLayoutReportsAdm;
      LinearLayout linearLayoutReportsAdm = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutReportsAdm == null) {
        break missingId;
      }

      return new ActivityAdminProfileBinding((ConstraintLayout) rootView, buttonLogoutAdm,
          buttonLogsAdm, buttonModifyAdm, buttonReportsAdm, imageView3, imageViewLogs,
          imageViewModify, imageViewReports, linearLayoutLogsAdm, linearLayoutModifyAdm,
          linearLayoutReportsAdm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
